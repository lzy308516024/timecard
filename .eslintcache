[{"C:\\Users\\WS\\Desktop\\时长\\timecard\\src\\App.js":"1","C:\\Users\\WS\\Desktop\\时长\\timecard\\src\\index.js":"2"},{"size":10441,"mtime":1606526970405,"results":"3","hashOfConfig":"4"},{"size":235,"mtime":1606352703377,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"4cuthb",{"filePath":"9","messages":"10","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\WS\\Desktop\\时长\\timecard\\src\\App.js",["12","13","14","15","16","17","18","19","20","21","22","23","24","25","26"],"import React, { Component } from \"react\";\nimport { Row, Col, Input, Button, Table, Space, DatePicker,Select } from \"antd\";\n\nimport \"./index.css\";\nconst { Option } = Select;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      h1: 8,\n      h2: 20,\n      m1: 45,\n      m2: 0,\n      total: 0,\n      average: 0,\n      count: 0,\n      curDate:new Date().toLocaleDateString(),\n      columns: [\n        {\n          title:\"日期\",\n          dataIndex: \"date\",\n          key: \"date\",\n        },\n        // {\n        //   title: \"序号\",\n        //   dataIndex: \"id\",\n        //   key: \"id\",\n        // },\n        {\n          title: \"签到\",\n          dataIndex: \"signIn\",\n          key: \"signIn\",\n          // render: (text) => <a>{text}</a>,\n        },\n        {\n          title: \"签退\",\n          dataIndex: \"signOut\",\n          key: \"signOut\",\n        },\n        {\n          title: \"时长（分钟）\",\n          dataIndex: \"time1\",\n          key: \"time1\",\n        },\n        {\n          title: \"时长（小时）\",\n          dataIndex: \"time2\",\n          key: \"time2\",\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          render: (text, record) => (\n            <Space size=\"middle\">\n              <a onClick={(e) => this.handleDelete(record, e)}>Delete</a>\n            </Space>\n          ),\n        },\n      ],\n      tableData: [\n        // {\n        //   key: \"1\",\n        //   indexSort: \"John Brown\",\n        //   signIn: \"8:32\",\n        //   signOut: \"22:00\",\n        //   time1: \"sada\",\n        //   time2: \"dfsdf\",\n        // },\n      ],\n    };\n  }\n\n  componentDidMount(){\n    let data =  localStorage.getItem('myData')\n    let sum = localStorage.getItem('localsum')\n    let ave = localStorage.getItem('localave')\n    console.log(data)\n    if(data){\n      data = JSON.parse(data)\n      sum = JSON.parse(sum)\n      ave = JSON.parse(ave)\n      this.setState({\n        tableData:data,\n        total:sum,\n        average:ave\n      })\n    }\n  }\n  \n  handleDelete = (record, e) => {\n    let newData = this.state.tableData.filter(function (item) {\n      return item.id !== record.id; //返回你选中删除之外的所有数据\n    });\n    console.log(newData);\n    let sum = newData.reduce((acc, cur) => acc + Number(cur.time2), 0);\n    console.log(this.state.tableData.length);\n    let ave = sum / (this.state.tableData.length - 1);\n    this.setState({\n      tableData: newData,\n      total: sum,\n      average: ave,\n    });\n   \n    setTimeout(() => {\n      let data = JSON.stringify(this.state.tableData);\n      let localsum = JSON.stringify(this.state.total);\n      let localave = JSON.stringify(this.state.average);\n      localStorage.setItem('myData',data)\n      localStorage.setItem('localsum',localsum)\n      localStorage.setItem('localave',localave)\n    }, 0);\n  };\n\n  handleClick = () => {\n    let d = new Date().toLocaleDateString();\n    let h1 = this.state.h1;\n    let h2 = this.state.h2;\n    let m1 = this.state.m1;\n    let m2 = this.state.m2;\n    \n    console.log(h1,h2)\n    if (h2 - h1 < 0) {\n      alert(\"签退时间要大于签到时间\");\n      return;\n    } else if (h2 == h1) {\n      if (m2 <= m1) {\n        alert(\"签退时间要大于签到时间\");\n        return;\n      }\n    }\n\n    let time1 = d + \" \" + h1 + \":\" + m1 + \":\" + \"00\";\n    let time2 = d + \" \" + h2 + \":\" + m2 + \":\" + \"00\";\n\n    let res = new Date(time2).getTime() - new Date(time1).getTime();\n    res = res - 1000 * 3600 * 1.5;\n    if (h2 > 18) {\n      res = res - 1000 * 60 * 40;\n    } else if (h2 == 18) {\n      if (m2 >= 40) {\n        res = res - 1000 * 60 * 40;\n      } else {\n        res = res - m2 * 60000;\n      }\n    }\n    let dayDiff = Math.floor(res / (24 * 3600 * 1000));\n\n    let leave1 = res % (24 * 3600 * 1000);\n\n    let hours = Math.floor(leave1 / (3600 * 1000));\n\n    let leave2 = leave1 % (3600 * 1000);\n\n    let minutes = Math.floor(leave2 / (60 * 1000));\n\n    let pot = Number(minutes / 60 + hours).toFixed(2);\n\n    let obj = {};\n    obj.date = this.state.curDate;\n    obj.id = Date.parse(new Date()) + parseInt(Math.random()*100000);\n    obj.signIn = `${h1}:${m1}`;\n    obj.signOut = `${h2}:${m2}`;\n    obj.time1 = `${hours}小时${minutes}分钟`;\n    obj.time2 = `${pot}`;\n\n    let sum = this.state.tableData.reduce(\n      (acc, cur) => acc + Number(cur.time2),\n      0\n    );\n   \n    sum = Number(sum) + Number(pot);\n    \n    console.log(this.state.tableData.length);\n    let ave = sum / (this.state.tableData.length + 1);\n\n    // const obj1 = {\n    //   key:12,\n    //   indexSort:12,\n    //   signIn:'8:20',\n    //   signOut:'22:00',\n    //   time1:'12312312',\n    //   time2:'fsdfsfsfsd'\n    // }\n    const { tableData, average, total } = this.state;\n    this.setState({\n      tableData: [...tableData, obj],\n      total: sum,\n      average: ave,\n      h1: 9,\n      h2: 20,\n      m1: 0,\n      m2: 0,\n    });\n    setTimeout(() => {\n      console.log(this.state.tableData)\n      let localData = JSON.stringify(this.state.tableData)\n      localStorage.setItem('myData',localData)\n      let localsum = JSON.stringify(this.state.total)\n      let localave = JSON.stringify(this.state.average)\n      localStorage.setItem('localsum',localsum)\n      localStorage.setItem('localave',localave)\n    }, 0);\n  };\n\n  handleInput = (type, e) => {\n    console.log(type, e.target.value);\n    this.setState({\n      [type]: e.target.value,\n    });\n  };\n\n  onChange = (date, dateString) => {\n    console.log(date, dateString);\n    let week = new Date(dateString).getDay();\n    console.log(typeof week);\n    let str = \"\";\n    if (week == 0) {\n      str = dateString + \"(星期日)\";\n    } else if (week == 1) {\n      str = dateString + \"(星期一)\";\n    } else if (week == 2) {\n      str = dateString + \"(星期二)\";\n    } else if (week == 3) {\n      str = dateString + \"(星期三)\";\n    } else if (week == 4) {\n      str = dateString + \"(星期四)\";\n    } else if (week == 5) {\n      str = dateString + \"(星期五)\";\n    } else if (week == 6) {\n      str = dateString + \"(星期六)\";\n    }\n\n    this.setState({\n      curDate: str,\n    });\n    setTimeout(() => {\n      console.log(this.state.curDate);\n    }, 0);\n  };\n  selectOnChange = (value)=>{\n    console.log(value)\n    this.setState({\n      h2:value\n    })\n  }\n  onSearch=(val) => {\n    console.log('search:', val);\n    \n  }\n  deletAll = () => {\n    if(this.state.tableData.length>0){\n      this.setState({\n        tableData:[],\n        total:0,\n        average:0\n      })\n      localStorage.removeItem('myData')\n      localStorage.removeItem('localsum')\n      localStorage.removeItem('localave')\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <>\n          <Row>\n            <Col span={8} className=\"left-pd\">\n              <div className=\"top\">\n                <div className=\"ml-space\">\n                  请选择日期: \n                  <Space direction=\"vertical\">\n                    <DatePicker onChange={this.onChange} />\n                  </Space>\n                </div>\n                <div>\n                  请输入签到时间：\n                  <Input\n                    type=\"Number\"\n                    max={24}\n                    min={0}\n                    className=\"single-input\"\n                    value={this.state.h1}\n                    onChange={(e) => {\n                      this.handleInput(\"h1\", e);\n                    }}\n                  />\n                  :\n                  <Input\n                    type=\"Number\"\n                    defaultValue={0}\n                    max={60}\n                    min={0}\n                    className=\"single-input\"\n                    value={this.state.m1}\n                    onChange={(e) => {\n                      this.handleInput(\"m1\", e);\n                    }}\n                  />\n                </div>\n              </div>\n              <div>\n                请输入签退时间：\n                <Select\n                  className=\"select-input\"\n                  showSearch\n                  placeholder=\"Select\"\n                  onChange={this.selectOnChange}\n                  value = {this.state.h2}\n                  onSearch={this.onSearch}\n                  optionFilterProp=\"children\"\n                >\n                  <Option value=\"17\">17</Option>\n                  <Option value=\"18\">18</Option>\n                  <Option value=\"19\">19</Option>\n                  <Option value=\"20\">20</Option>\n                  <Option value=\"21\">21</Option>\n                  <Option value=\"22\">22</Option>\n                  <Option value=\"23\">23</Option>\n                </Select>\n                :\n                <Input\n                  type=\"Number\"\n                  defaultValue={0}\n                  max={60}\n                  min={0}\n                  className=\"single-input\"\n                  value={this.state.m2}\n                  onChange={(e) => {\n                    this.handleInput(\"m2\", e);\n                  }}\n                />{\" \"}\n              </div>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                className=\"btn\"\n                onClick={this.handleClick}\n              >\n                计算\n              </Button>\n              <ul style={{ color: \"red\" }}>\n                <li>注意：</li>\n                <li>1.签到时间早于12点，签退时间晚于18点</li>\n                <li>2.不要输入负数以及其他数字以外的字符</li>\n              </ul>\n            </Col>\n            <Col span={16}>\n              <Table\n                className=\"top bottom\"\n                columns={this.state.columns}\n                dataSource={this.state.tableData}\n                rowKey={(record) => {\n                  return record.id + Date.now(); //在这里加上一个时间戳就可以了\n                }}\n                pagination={false}\n              />\n              <span className=\"ml-3\">\n                共{this.state.tableData.length}条数据\n              </span>{\" \"}\n              <Space>{}</Space>\n              <span className=\"ml-3\">共计{this.state.total}个小时</span>\n              <span>平均时长为{this.state.average}小时</span>\n              <span style={{float:\"right\",marginRight:\"100px\"}}><Button type=\"primary\" onClick={this.deletAll} danger>全部删除</Button></span>\n            </Col>\n          </Row>\n        </>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\WS\\Desktop\\时长\\timecard\\src\\index.js",["27","28","29"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, DatePicker, version } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n",{"ruleId":"30","severity":1,"message":"31","line":55,"column":15,"nodeType":"32","endLine":55,"endColumn":64},{"ruleId":"33","severity":1,"message":"34","line":125,"column":19,"nodeType":"35","messageId":"36","endLine":125,"endColumn":21},{"ruleId":"37","severity":1,"message":"38","line":132,"column":47,"nodeType":"35","messageId":"39","endLine":132,"endColumn":48},{"ruleId":"37","severity":1,"message":"38","line":133,"column":47,"nodeType":"35","messageId":"39","endLine":133,"endColumn":48},{"ruleId":"33","severity":1,"message":"34","line":139,"column":19,"nodeType":"35","messageId":"36","endLine":139,"endColumn":21},{"ruleId":"40","severity":1,"message":"41","line":146,"column":9,"nodeType":"42","messageId":"43","endLine":146,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":184,"column":24,"nodeType":"42","messageId":"43","endLine":184,"endColumn":31},{"ruleId":"40","severity":1,"message":"45","line":184,"column":33,"nodeType":"42","messageId":"43","endLine":184,"endColumn":38},{"ruleId":"33","severity":1,"message":"34","line":217,"column":14,"nodeType":"35","messageId":"36","endLine":217,"endColumn":16},{"ruleId":"33","severity":1,"message":"34","line":219,"column":21,"nodeType":"35","messageId":"36","endLine":219,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":221,"column":21,"nodeType":"35","messageId":"36","endLine":221,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":223,"column":21,"nodeType":"35","messageId":"36","endLine":223,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":225,"column":21,"nodeType":"35","messageId":"36","endLine":225,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":227,"column":21,"nodeType":"35","messageId":"36","endLine":227,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":229,"column":21,"nodeType":"35","messageId":"36","endLine":229,"endColumn":23},{"ruleId":"40","severity":1,"message":"46","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":16},{"ruleId":"40","severity":1,"message":"47","line":3,"column":18,"nodeType":"42","messageId":"43","endLine":3,"endColumn":28},{"ruleId":"40","severity":1,"message":"48","line":3,"column":30,"nodeType":"42","messageId":"43","endLine":3,"endColumn":37},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'dayDiff' is assigned a value but never used.","Identifier","unusedVar","'average' is assigned a value but never used.","'total' is assigned a value but never used.","'Button' is defined but never used.","'DatePicker' is defined but never used.","'version' is defined but never used."]